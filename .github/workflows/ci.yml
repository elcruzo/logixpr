name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [gcc, clang]
        exclude:
          - os: windows-latest
            compiler: clang

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake ninja

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install cmake ninja

    - name: Configure CMake
      run: |
        cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
        if: matrix.compiler == 'gcc' && matrix.os != 'windows-latest'
      env:
        CC: gcc
        CXX: g++

    - name: Configure CMake (Clang)
      if: matrix.compiler == 'clang'
      run: |
        cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
      env:
        CC: clang
        CXX: clang++

    - name: Configure CMake (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: cmake --build build --config Release

    - name: Test
      working-directory: build
      run: ctest --output-on-failure

    - name: Run tests directly
      working-directory: build
      run: ./logixpr_test

  build-docs:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Doxygen
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz

    - name: Build documentation
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release
        cmake --build build --target docs

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build/docs/html
